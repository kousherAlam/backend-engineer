## profiles: ["db"]
# docker-compose up service1 service2 ...n
# docker-compose up - run all service

services:
  user-api:
    build:
      context: .
      dockerfile: apps/user-api/Dockerfile
    ports:
      - '9000:9000'
    environment:
      - NODE_ENV=dev
      - PORT=9000
      - NAME=UserAPI
      - MONGODB_HOST=mongodb:27017
      - MONGODB_DBNAME=users
      - MONGODB_USER=user
      - MONGODB_PASSWORD=password
      - SWAGGER_PATH=swagger
      - API_PREFIX=api
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongodb
      - redis
    networks:
      - backend
  worker:
    build:
      context: .
      dockerfile: stats-worker/Dockerfile
    environment:
      - HOST_URL=localhost:27017
      - DB_NAME=users
      - DB_USER=user
      - PASSWORD=password
    depends_on:
      - mongodb
    networks:
      - backend
  mongodb:
    image: mongo:7.0.1-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_DATABASE: users
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - '27017:27017'
    volumes:
      - ./mongo:/data/db
    networks:
      - backend
  redis:
    image: redis:7.0-alpine3.18
    restart: always
    ports:
      - '6379:6379'
    command: ["redis-server", "--appendonly", "yes"]
    volumes: 
      - ./cache:/data
    networks:
      - backend
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    depends_on:
      - redis
    ports:
      - 8081:8081
    networks:
      - backend

networks:
  backend: 
    driver: bridge
